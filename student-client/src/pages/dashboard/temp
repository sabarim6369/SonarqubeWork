import { useSelector } from "react-redux";
import CalendarHeatmap from "react-calendar-heatmap";
import "react-calendar-heatmap/dist/styles.css";
import { subDays } from "date-fns";
import { Tooltip } from "react-tooltip";
import "react-tooltip/dist/react-tooltip.css";
import React, { useState, useEffect } from "react";
import { buildStyles, CircularProgressbar } from "react-circular-progressbar";
import "react-circular-progressbar/dist/styles.css";
import bronze from "../../assets/images/bronze.png";
import { FaCheckCircle } from "react-icons/fa";
import { FaLink } from "react-icons/fa";
import { IoCheckmarkCircleSharp } from "react-icons/io5";
import { RiProgress2Fill } from "react-icons/ri";
import { useNavigate } from "react-router-dom";
import { CgProfile } from "react-icons/cg";
import { FaRankingStar } from "react-icons/fa6";
import { BiWorld } from "react-icons/bi";
import { TbFileReport } from "react-icons/tb";
import { SiLeetcode } from "react-icons/si";

export default function Dashboard() {
  const student = useSelector((state) => state.student);
  const programs = student.program_id;
  console.log(programs);
  const activityData = [
    { date: "2025-03-30", count: 1 },
    { date: "2025-04-01", count: 3 },
    { date: "2025-04-04", count: 4 },
    { date: "2025-04-06", count: 2 },
  ];
  const [Easyprogress, setEasyProgress] = useState(50);
  const [Mediumprogress, setMediumProgress] = useState(23);
  const [HardProgress, setHardProgress] = useState(12);
  const [rampexProgress, setRampexProgress] = useState({
    easy: 10,
    medium: 20,
    hard: 30,
    total: 60,
    monthly: 20,
    streak: 5,
    badge: "Bronze",
  });
  const navigate = useNavigate();

  const onGoingCourses = () => {
    return programs
      .filter((program) => program.programStatus === "Ongoing")
      .map((program) => (
        <div
          key={program._id}
          className="flex flex-row w-full rounded-lg  justify-between items-center bg-gray-200 p-4 select-none cursor-pointer hover:bg-gray-300 transition-all"
          onClick={() => {
            navigate(`/courses/${program._id}`);
          }}
        >
          <div>
            <div className="text-lg font-semibold">{program.name}</div>
            <div>{program.description}</div>
            <div className="text-sm mt-4">
              {new Date(program.startDate).toLocaleDateString()} -{" "}
              {new Date(program.endDate).toLocaleDateString()}
            </div>
          </div>
          <div>
            <FaLink />
          </div>
        </div>
      ));
  };
  const completedCourses = () => {
    return programs
      .filter((program) => program.programStatus === "Completed")
      .map((program) => (
        <div
          key={program._id}
          className="flex flex-row w-full rounded-lg  justify-between items-center bg-gray-200 p-4 select-none cursor-pointer hover:bg-gray-300 transition-all"
          onClick={() => {
            navigate(`/courses/${program._id}`);
          }}
        >
          <div>
            <div className="text-lg font-semibold">{program.name}</div>
            <div>{program.description}</div>
            <div className="text-sm mt-4">
              {new Date(program.startDate).toLocaleDateString()} -{" "}
              {new Date(program.endDate).toLocaleDateString()}
            </div>
          </div>
          <div>
            <FaLink />
          </div>
        </div>
      ));
  };
  const ProgressBar = ({ progress, color }) => {
    return (
      <div className="w-full bg-gray-300 rounded-full h-2 overflow-hidden mb-4">
        <div
          className={`${color} h-full flex items-center justify-end transition-all duration-500 text-white font-semibold pr-2`}
          style={{ width: `${progress}%` }}
        ></div>
      </div>
    );
  };

  return (
    <div className="overflow-y-auto h-full w-full">
    <div className=" flex flex-row p-6 pt-8 gap-4 pb-4">
      <div className="h-full w-[60%]">
        <div className="flex flex-row gap-1 mt-6 mb-4 justify-between items-center">
          <div className="flex flex-row gap-4 items-center">
            <div className="">
              <CgProfile size={50} color="var(--blue)" />
            </div>
            <div className="flex flex-col">
              <div className="font-medium text-2xl text-blue">{student.name}</div>
              <div className="text-gray-600 text-xs font-medium">Email : {student.email}</div>
              <div className="text-gray-600 text-xs font-medium">Student at {student.collegeId.name}</div>

            </div>
          </div>
          <div className="">

          </div>
        </div>
        <div className="mt-4 mb-4">
          <div style={{ transform: "scale(1)", transformOrigin: "top left" }}>
            <Tooltip id="heatmap-tooltip" />
            <CalendarHeatmap
              startDate={subDays(new Date(), 365)}
              endDate={new Date()}
              values={activityData}
              showWeekdayLabels={true}
              gutterSize={1}
              tooltipDataAttrs={(value) => {
                if (!value?.date) return null;
                return {
                  "data-tooltip-id": "heatmap-tooltip",
                  "data-tooltip-content": `${value.date}: ${
                    value.count || 0
                  } activities`,
                };
              }}
              transformDayElement={(rect, value) => {
                let fill = "#e5e7eb";
                if (value?.count >= 1 && value.count < 2) fill = "#0086d1";
                else if (value?.count < 4) fill = "#0173e6";
                else if (value?.count >= 4) fill = "#1b1464";

                return React.cloneElement(rect, {
                  width: 9,
                  height: 9,
                  rx: 2,
                  ry: 2,
                  style: { fill },
                });
              }}
            />
          </div>
        </div>
        <div className="flex flex-row gap-4 mt-4 mb-4">
          <div className="w-1/2 flex flex-col  bg-gray-100 rounded-xl items-center justify-center pt-4 pb-4">
            <div className="text-xl font-semibold text-blue">
              Completed Courses
            </div>
            <div className="flex flex-row gap-2 mt-2 items-center text-xl font-medium">
              <IoCheckmarkCircleSharp
                className="h-8 w-8"
                color="var(--backgroundBlue)"
              />
              {completedCourses().length}
            </div>
          </div>
          <div className="w-1/2 flex flex-col bg-gray-100 rounded-xl items-center justify-center pt-4 pb-4">
            <div className="text-xl font-semibold text-blue">
              Ongoing Courses
            </div>
            <div className="flex flex-row gap-2 mt-2 items-center text-xl font-medium">
              <RiProgress2Fill
                className="h-8 w-8"
                color="var(--backgroundBlue)"
              />
              {onGoingCourses().length}
            </div>
          </div>
        </div>
        <div className="p-4 h-100 w-full bg-gray-100 rounded-xl mt-4 mb-4 overflow-y-auto">
          <div className="w-full flex flex-row justify-between items-center mb-4">
            <div className="text-xl font-medium text-blue">OnGoing Courses</div>
            <RiProgress2Fill
              className="h-8 w-8"
              color="var(--backgroundBlue)"
            />
          </div>
          {onGoingCourses()}
        </div>
        <div className="p-4 h-100 w-full bg-gray-100 rounded-xl mt-4 mb-4 overflow-y-auto">
          <div className="w-full flex flex-row justify-between items-center mb-4">
            <div className="text-xl font-medium text-blue">
              completed Courses
            </div>
            <IoCheckmarkCircleSharp
              className="h-8 w-8"
              color="var(--backgroundBlue)"
            />
          </div>
          {completedCourses()}
        </div>
      </div>
      <div className="h-full flex-1">
        <div className="h-80 w-full bg-gray-100 mb-4 flex flex-col rounded-xl p-4">
          <div className="flex flex-row w-full justify-between items-center mb-4">
            <div className="text-xl font-medium text-blue">Rankings</div>
            <FaRankingStar className="h-8 w-8" color="var(--backgroundBlue)" />
          </div>
          <div className="w-full border-t-1 border-gray-700 mb-4"></div>
          <div className="flex flex-row gap-2 mb-2">
            <div className="text-lg">College : </div>
            <div className="font-semibold text-lg">{student.collegeId.name}</div>
          </div>
          <div className="flex flex-row gap-2 mb-2">
            <div className="text-lg">Ranking : </div>
            <div className="font-semibold text-lg text-backgroundBlue">{120}</div>
          </div>
          <div className="flex flex-row gap-2 mb-4 text-gray-500">
            <div>You Beat 90% of the students at your college </div>
          </div>
          <div className="w-full border-t-1 border-gray-700 mb-4"></div>
          <div className="flex flex-row justify-between items-center mb-4">
            <div className="text-xl text-blue font-medium">Global Ranking</div>
            <div className=""><BiWorld  className="h-8 w-8" color="var(--backgroundBlue)"/></div>
          </div>
          <div className="flex flex-row gap-2 mb-2">
            <div className="text-lg">Ranking : </div>
            <div className="font-semibold text-lg text-backgroundBlue">{967564}</div>
          </div>
        </div>
        <div className="w-full text-xl font-semibold items-center justify-center flex mb-4">
          Rampex Coding Platform
        </div>
        <div className="flex flex-row  w-full bg-gray-100 h-60 rounded-xl ">
          <div className="w-[40%] flex flex-col items-center justify-center ">
            <div className="h-45 flex items-center">
              <CircularProgressbar
                value={12}
                strokeWidth={7}
                styles={buildStyles({
                  trailColor: "",
                  pathColor: "var(--backgroundBlue)",
                  pathTransitionDuration: 0.5,
                  textColor: "black",
                  textSize: "20px",
                  textStyle: {
                    fontWeight: "bold",
                  },
                })}
                text="12%"
                className="h-4/5 aspect-square flex items-center justify-center"
              ></CircularProgressbar>
            </div>
            <div className="font-medium text-lg ">120/1200</div>
          </div>
          <div className="flex flex-col flex-1 pt-3 pb-3">
            <div className="text-base flex-1 w-9/10  rounded-xl flex flex-col pl-3 pr-3 justify-center">
              <div className="pt-2 flex flex-row justify-between">
                <div>Easy</div>
                <div>12/500</div>
              </div>
              <ProgressBar progress={Easyprogress} color={"bg-green-500"} />
            </div>
            <div className="text-base flex-1 w-9/10  rounded-xl flex flex-col pl-3 pr-3 justify-center">
              <div className="pt-2 flex flex-row justify-between">
                <div>Medium</div>
                <div>12/500</div>
              </div>
              <ProgressBar progress={Mediumprogress} color={"bg-yellow-500"} />
            </div>
            <div className="text-base flex-1 w-9/10 rounded-xl flex flex-col pl-3 pr-3 justify-center">
              <div className="pt-2 flex flex-row justify-between">
                <div>Hard</div>
                <div>12/500</div>
              </div>
              <ProgressBar progress={HardProgress} color={"bg-orange-500"} />
            </div>
          </div>
          
        </div>
        <div className="w-full h-144 bg-gray-100 mt-4 rounded-xl flex flex-col p-4">
          <div className="flex flex-row w-full justify-between items-center mb-4">  
            <div className="text-xl font-medium text-blue">Recent Submissions</div>
            <TbFileReport  className="h-8 w-8" color="var(--backgroundBlue)" />
          </div>
          <div className="w-full border-t-1 border-gray-700 mb-4"></div>
          
        </div>
      </div>
    </div>
    <div className="flex flex-wrap gap-4 p-6">
      <div className="w-full flex items-center justify-center text-2xl font-medium text-blue">Global Coding Platforms</div>
      <div className="w-1/3 flex flex-col bg-gray-100 rounded-xl p-4 h-70 cursor-pointer hover:scale-101 transition-all">
        <div className="flex flex-row items-center gap-4 mb-4">
          <div className="flex items-center justify-center h-12 w-12 bg-black rounded-full">
            <SiLeetcode className="h-6 w-6" color="white" />
          </div>
          <div className="text-xl font-medium text-blue">Leetcode ( {student.leetcode.username} )</div>
        </div>
        <div className="w-full border-t-1 border-gray-700 mb-4"></div>

        {/* <div className="flex flex-row">
          <div >Username : </div>
          <div className="font-medium ml-4"> {student.leetcode.username}</div>
        </div> */}
        <div className="flex flex-row mb-2">
          <div >Ranking : </div>
          <div className="font-semibold ml-4 text-backgroundBlue"> {student.leetcode.profile.ranking}</div>
        </div>
        <div className="flex flex-row mb-4">
          <div >Total Solved : </div>
          <div className="font-medium ml-4"> {student.leetcode.submitStats.acSubmissionNum[0].count}</div>
        </div>
        <div className="w-full border-t-1 border-gray-700 mb-4"></div>

        <div className="flex flex-row mb-1">
          <div >Easy Problems : </div>
          <div className="font-medium ml-4"> {student.leetcode.submitStats.acSubmissionNum[1].count}</div>
        </div>
        <div className="flex flex-row mb-1">
          <div >Medium Problems : </div>
          <div className="font-medium ml-4"> {student.leetcode.submitStats.acSubmissionNum[2].count}</div>
        </div>
        <div className="flex flex-row">
          <div >Hard Problems : </div>
          <div className="font-medium ml-4"> {student.leetcode.submitStats.acSubmissionNum[3].count}</div>
        </div>
      </div>
    </div>
    </div>
  );
}
